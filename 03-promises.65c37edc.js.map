{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,WACNH,EACFF,EAAQH,EAAUC,GAElBG,EAAOJ,EAAUC,E,GAElBA,E,KA5CM,CACXQ,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAC3B,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAaF,EAAMG,OAAOf,MAAMgB,MAChCC,EAAYL,EAAMG,OAAOG,KAAKF,MAC9BG,EAASP,EAAMG,OAAOI,OAAOH,OAKnC,SAA2BF,EAAYI,EAAMC,GAG3C,IAFA,IAAIC,EAAUN,EAELO,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCvB,EAAcuB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAuCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAInDoB,GAAWF,C,CAnBbY,CAAkBC,OAAOjB,GAAaiB,OAAOd,GAAYc,OAAOZ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', getFormValues);\nfunction getFormValues(event) {\n  event.preventDefault();\n  let firstDelay = event.target.delay.value;\n  let stepDelay = event.target.step.value;\n  let amount = event.target.amount.value;\n  // console.log(firstDelay)\n  createNewPromises(Number(firstDelay), Number(stepDelay), Number(amount));\n}\n\nfunction createNewPromises(firstDelay, step, amount) {\n  let newStep = firstDelay;\n  // console.log(firstDelay)\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, newStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    newStep += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve(position, delay);\n      } else {\n        reject(position, delay);\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setInterval","form","document","querySelector","addEventListener","event","preventDefault","firstDelay","target","value","stepDelay","step","amount","newStep","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$createNewPromises","Number"],"version":3,"file":"03-promises.65c37edc.js.map"}