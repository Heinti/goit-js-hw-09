{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAE/B,OADAC,QAAQC,IAAIH,GACL,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,aAAY,KACNH,EACFF,EAAQ,C,SAACL,E,MAAUC,IAGnBK,EAAO,C,SAACN,E,MAAUC,GAAO,GAG1BA,EAAM,G,EAhDA,CACXU,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAC3B,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAaF,EAAMG,OAAOjB,MAAMkB,MAChCC,EAAYL,EAAMG,OAAOG,KAAKF,MAC9BG,EAASP,EAAMG,OAAOI,OAAOH,OAKnC,SAA2BF,EAAYI,EAAMC,GAC3C,IAAIC,EAAUN,EAEd,IAAK,IAAIO,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCzB,EAAcyB,EAAGD,GACdE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MAEjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoB9B,QAAiBC,MAAU,IAIrDsB,GAAWF,C,CApBbU,CAAkBC,OAAOf,GAAae,OAAOZ,GAAYY,OAAOV,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', getFormValues);\nfunction getFormValues(event) {\n  event.preventDefault();\n  let firstDelay = event.target.delay.value;\n  let stepDelay = event.target.step.value;\n  let amount = event.target.amount.value;\n  // console.log(firstDelay)\n  createNewPromises(Number(firstDelay), Number(stepDelay), Number(amount));\n}\n\nfunction createNewPromises(firstDelay, step, amount) {\n  let newStep = firstDelay;\n  // console.log(firstDelay)\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, newStep)\n      .then(({ position, delay }) => {\n        // console.log(position)\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    newStep += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  console.log(position)\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n        \n      } else {\n        reject({position, delay});\n        \n      }\n    }, delay);\n  });\n}\n\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","console","log","Promise","resolve","reject","shouldResolve","Math","random","setInterval","form","document","querySelector","addEventListener","event","preventDefault","firstDelay","target","value","stepDelay","step","amount","newStep","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$createNewPromises","Number"],"version":3,"file":"03-promises.f4a22c0b.js.map"}